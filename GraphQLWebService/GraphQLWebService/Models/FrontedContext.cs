// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace GraphQLWebService.Models
{
    public partial class FrontedContext : DbContext
    {

        public FrontedContext(DbContextOptions<FrontedContext> options)
            : base(options)
        {
        }

        public virtual DbSet<School> Schools { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<Town> Towns { get; set; }
        public virtual DbSet<Workshop> Workshops { get; set; }
        public virtual DbSet<WorkshopParticipant> WorkshopParticipants { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Croatian_CI_AS");

            modelBuilder.Entity<School>(entity =>
            {
                entity.ToTable("School");

                entity.HasIndex(e => new { e.Name, e.TownId }, "IX_School")
                    .IsUnique();

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.HasOne(d => d.Town)
                    .WithMany(p => p.Schools)
                    .HasForeignKey(d => d.TownId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_School_Town");
            });

            modelBuilder.Entity<Student>(entity =>
            {
                entity.ToTable("Student");

                entity.HasIndex(e => e.Email, "UIX_Student_Email")
                    .IsUnique();

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Surname)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.School)
                    .WithMany(p => p.Students)
                    .HasForeignKey(d => d.SchoolId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Student_School");
            });

            modelBuilder.Entity<Town>(entity =>
            {
                entity.ToTable("Town");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<Workshop>(entity =>
            {
                entity.ToTable("Workshop");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.School)
                    .WithMany(p => p.Workshops)
                    .HasForeignKey(d => d.SchoolId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Workshop_School");
            });

            modelBuilder.Entity<WorkshopParticipant>(entity =>
            {
                entity.ToTable("WorkshopParticipant");

                entity.HasIndex(e => new { e.ParticipantId, e.WorkshopId }, "IX_WorkshopParticipant")
                    .IsUnique();

                entity.HasOne(d => d.Participant)
                    .WithMany(p => p.WorkshopParticipants)
                    .HasForeignKey(d => d.ParticipantId)
                    .HasConstraintName("FK_WorkshopParticipant_Student");

                entity.HasOne(d => d.Workshop)
                    .WithMany(p => p.WorkshopParticipants)
                    .HasForeignKey(d => d.WorkshopId)
                    .HasConstraintName("FK_WorkshopParticipant_Workshop");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}